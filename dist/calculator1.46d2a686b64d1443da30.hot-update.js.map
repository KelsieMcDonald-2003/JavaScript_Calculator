{"version":3,"file":"calculator1.46d2a686b64d1443da30.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAgC;AACW;AACR;AACJ;AAE/BC,kDAAM,CAAC,CAAC;AACRD,0DAAU,CAAC,CAAC;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjHA,IAmHMG,UAAU;EAIZ,SAAAA,WAAA,EAAc;IAAAC,eAAA,OAAAD,UAAA;IACV,IAAI,CAACE,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAC1C,IAAI,CAACF,GAAG,CAACG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC;IACxC,IAAI,CAACH,GAAG,CAACG,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC;EAC5C;EAAC,OAAAC,YAAA,CAAAN,UAAA;IAAAO,GAAA;IAAAC,KAAA,EAED,SAAAC,cAAcC,GAAG,EAAE;MACfP,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACI,KAAK,IAAIE,GAAG;IAClD;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,YAAYC,CAAC,EAAE;MACXA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAIC,MAAM,GAAGF,CAAC,CAACE,MAAM;MACrB,IAAIN,KAAK,GAAGI,CAAC,CAA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","sources":["webpack://recipesearchapp/./src/js/calvs1.js","webpack://recipesearchapp/webpack/runtime/getFullHash"],"sourcesContent":["import '../css/calculator1.css';\r\nimport {directions} from './directions.js';\r\nimport {navbar} from './navbar.js';\r\nimport * as math from 'mathjs';\r\n\r\nnavbar()\r\ndirections()\r\n\r\n/*\r\nclass Calculator{\r\n    /*\r\n        This static property contains an array of allowed keys for the \r\n        calculator\r\n    \r\n    static ALLOWED_KEYS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', '*', '/', '%', '(', ')', '=']\r\n    \r\n    /*\r\n        This is the constructor method for the Calculator class. It gets the calculator \r\n        element from the DOM and adds an event listener for the “keyup” event.\r\n    \r\n    constructor(){\r\n        this.cal = document.getElementById(\"calc\");\r\n        //this.cal.addEventListener(\"click\", this);\r\n        this.cal.addEventListener(\"keyup\", this);\r\n    }\r\n\r\n    /*\r\n        This method appends the passed value to the calculator’s display.\r\n    \r\n    displayValues(val){\r\n        document.getElementById(\"result\").value += val;\r\n    }\r\n\r\n    /*\r\n      This method handles the events triggered on the calculator. It checks if the event target is \r\n      a button and if the value is allowed. If the value is “=”, it calls the solve() method. If \r\n      the value is an allowed key, it calls the displayValues() method. It also calls the solve() \r\n      method if the “Enter” key is pressed.  \r\n    \r\n    handleEvent(e){\r\n        e.preventDefault();\r\n        let target = e.target;\r\n        let value = e.type == \"keyup\" ? e.key : e.target.value;\r\n    \r\n        // Check if the event target is a button\r\n        if(target.tagName.toLowerCase() === 'input' && target.type === 'button'){\r\n            if(value === \"=\"){\r\n                this.solve();\r\n            } else if(Calculator.ALLOWED_KEYS.includes(value)){\r\n                this.displayValues(value);\r\n            }\r\n            // Stop the event from bubbling up to the calculator\r\n            e.stopPropagation();\r\n        }\r\n    \r\n        if(e.keyCode === 13){\r\n            this.solve();\r\n        }\r\n    }\r\n    \r\n    /*\r\n        This method evaluates the expression in the calculator’s display and updates the display with the result.\r\n    \r\n    solve(){\r\n        let x = document.getElementById(\"result\").value;\r\n        let y = math.evaluate(x);\r\n        document.getElementById(\"result\").value = y;\r\n    }\r\n\r\n    /*\r\n        This method clears the calculator’s display.\r\n    \r\n    clear(){\r\n        document.getElementById(\"result\").value = \"\";\r\n    } \r\n\r\n    /*\r\n        This method creates the buttons for the calculator and adds them to the DOM. \r\n        It also assigns the appropriate event handlers to each button.\r\n    \r\n    createButtons(){\r\n        const buttonValues = [\r\n            ['7', '8', '9', '/'],\r\n            ['4', '5', '6', '*'],\r\n            ['1', '2', '3', '-'],\r\n            ['.', '0', '+', '%'],\r\n            ['(', ')', '=']\r\n        ];\r\n\r\n        const table = document.getElementById('calc');\r\n\r\n        buttonValues.forEach(row => {\r\n            const tr = document.createElement('tr');\r\n            row.forEach(value => {\r\n                const td = document.createElement('td');\r\n                const button = document.createElement('input');\r\n                button.type = 'button';\r\n                button.value = value;\r\n                if(value === '='){\r\n                    button.id = 'equals';\r\n                    td.colSpan = 2;\r\n                } else{\r\n                    button.id = isNaN(value) ? 'symbol' : 'number';\r\n                }\r\n                button.onclick = value === '=' ? () => this.solve() : value === 'C' ? () => this.clear() : () => this.displayValues(value);\r\n                td.appendChild(button);\r\n                tr.appendChild(td);\r\n            });\r\n            table.appendChild(tr);\r\n        });\r\n    }\r\n}\r\n\r\n/*\r\n    This is an event handler that gets called when the window has finished loading. \r\n    It creates a new instance of the Calculator class and calls the createButtons() method.\r\n\r\nwindow.onload = () => {\r\n    window.calculator = new Calculator();\r\n    calculator.createButtons();\r\n}\r\n*/\r\n\r\nclass Calculator {\r\n    //static ALLOWED_KEYS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', '*', '/', '%', '(', ')', '='];\r\n    static ALLOWED_KEYS = ['1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '(', '0', ')', '.', '%', '^', '='];\r\n\r\n    constructor() {\r\n        this.cal = document.getElementById(\"calc\");\r\n        this.cal.addEventListener(\"keyup\", this);\r\n        this.cal.addEventListener(\"click\", this);\r\n    }\r\n\r\n    displayValues(val) {\r\n        document.getElementById(\"result\").value += val;\r\n    }\r\n\r\n    handleEvent(e) {\r\n        e.preventDefault();\r\n        let target = e.target;\r\n        let value = e.type == \"keyup\" ? e.key : e.target.value;\r\n\r\n        if (target.tagName.toLowerCase() === 'input' && target.type === 'button') {\r\n            if (value === \"=\") {\r\n                this.solve();\r\n            } else if (Calculator.ALLOWED_KEYS.includes(value)) {\r\n                this.displayValues(value);\r\n            }\r\n            e.stopPropagation();\r\n        }\r\n\r\n        if (e.keyCode === 13) {\r\n            this.solve();\r\n        }\r\n    }\r\n\r\n    solve() {\r\n        let x = document.getElementById(\"result\").value;\r\n        let y = math.evaluate(x);\r\n        document.getElementById(\"result\").value = y;\r\n    }\r\n\r\n    clear() {\r\n        document.getElementById(\"result\").value = \"\";\r\n    }\r\n\r\n    /*\r\n     The following method is used to dynamically create a set of\r\n     buttons and add them to a table in the HTML document.\r\n    */\r\n    createButtons() {\r\n        const table = document.getElementById('calc');\r\n        let buttonId = 0;\r\n        let tr = document.createElement('tr'); // Create the first row\r\n    \r\n        Calculator.ALLOWED_KEYS.forEach((value, index) => {\r\n            if (index % 4 === 0 && index !== 0) { // Change '4' to set the number of buttons per row\r\n                table.appendChild(tr); // Append the completed row to the table\r\n                tr = document.createElement('tr'); // Create a new row for next set of buttons\r\n            }\r\n    \r\n            const td = document.createElement('td');\r\n            const button = document.createElement('input');\r\n            button.type = 'button';\r\n            button.value = value;\r\n            button.id = `button${buttonId++}`;\r\n            td.appendChild(button);\r\n            tr.appendChild(td); \r\n        });\r\n    \r\n        table.appendChild(tr); // Append the last row to the table\r\n    }  \r\n}\r\n\r\nwindow.onload = () => {\r\n    window.calculator = new Calculator();\r\n    calculator.createButtons();\r\n}","__webpack_require__.h = () => (\"b0ef33922f2cb5f06f6b\")"],"names":["directions","navbar","math","Calculator","_classCallCheck","cal","document","getElementById","addEventListener","_createClass","key","value","displayValues","val","handleEvent","e","preventDefault","target","type","tagName","toLowerCase","solve","ALLOWED_KEYS","includes","stopPropagation","keyCode","x","y","evaluate","clear","createButtons","table","buttonId","tr","createElement","forEach","index","appendChild","td","button","id","concat","_defineProperty","window","onload","calculator"],"sourceRoot":""}